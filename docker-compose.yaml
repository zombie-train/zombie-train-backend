x-logging:
      &default-logging
      options:
        max-size: "10m"
        max-file: "3"


services:
  db:
    networks:
      - app_network
    image: postgres:13
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    logging: *default-logging

  backend:
    networks:
      - app_network
    build:
      context: .
      dockerfile: Dockerfile.prod
    # volumes:
    #   - .:/app
    #   - ./static:/app/static  # Bind mount for static files
    ports:
      - 8000:8000
    depends_on:
      - db
    env_file:
      - .env
    command: sh /app/init-django.sh
    labels:
      deck-chores.execute-new-day.command: sh -c "python /app/manage.py new_day"
      deck-chores.execute-new-day.cron: "* * * * * 0 0 0"
      deck-chores.execute-bot-scores.command: sh -c "python /app/manage.py seed --bot-scores"
      deck-chores.execute-bot-scores.cron: "* * * * * */3 59 59"
    logging: *default-logging

  # nginx:
  #   networks:
  #     - app_network
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./static:/app/static  # Bind mount for static files
  #     - ./certs:/etc/letsencrypt  # Bind mount for Let's Encrypt certificates
  #   depends_on:
  #     - backend
  #   environment:
  #     - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
  #     - ADMIN_EMAIL=${ADMIN_EMAIL}
  #   logging: *default-logging

  # officer:
  #   image: funkyfuture/deck-chores:1
  #   restart: unless-stopped
  #   environment:
  #     TIMEZONE: UTC
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   logging: *default-logging

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:

